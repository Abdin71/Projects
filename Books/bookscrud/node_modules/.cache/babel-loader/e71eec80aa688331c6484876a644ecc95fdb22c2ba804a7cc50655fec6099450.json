{"ast":null,"code":"var _jsxFileName = \"/Users/abdinasir/Documents/bookscrud/src/App.js\",\n  _s = $RefreshSig$();\n// Filename - App.js\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: `d-flex flex-column justify-content-center \n        align-items-center ${isDarkMode ? 'bg-dark text-light' : 'bg-light'}`,\n      style: {\n        minHeight: '70vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isDarkMode ? 'Dark Theme' : 'Light Theme'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: toggleDarkMode,\n        children: \"Toggle Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkMode","setIsDarkMode","toggleDarkMode","prevMode","children","className","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/abdinasir/Documents/bookscrud/src/App.js"],"sourcesContent":["// Filename - App.js\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Button } from 'react-bootstrap';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <>\n      <Container\n        className={`d-flex flex-column justify-content-center \n        align-items-center ${isDarkMode ? \n        'bg-dark text-light' : 'bg-light'}`}\n        style={{ minHeight: '70vh' }}\n      >\n        <h1>{isDarkMode ? 'Dark Theme' : 'Light Theme'}</h1>\n        <Button variant=\"primary\" onClick={toggleDarkMode}>\n          Toggle Theme\n        </Button>\n      </Container>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,SAASC,SAAS,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAEE,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACH,SAAS;MACRa,SAAS,EAAE;AACnB,6BAA6BL,UAAU,GAC/B,oBAAoB,GAAG,UAAU,EAAG;MACpCM,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,gBAE7BT,OAAA;QAAAS,QAAA,EAAKJ,UAAU,GAAG,YAAY,GAAG;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpDhB,OAAA,CAACF,MAAM;QAACmB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEX,cAAe;QAAAE,QAAA,EAAC;MAEnD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACZ,CAAC;AAEP;AAACZ,EAAA,CAtBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}